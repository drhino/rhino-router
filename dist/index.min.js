let r=[];export const add=e=>{if(void 0===e.route)throw new Error("RR0100: `route` key required");if(e.vars)throw new Error("RR0202: do not use `vars` key");r.push({input:e,...t(e.route)})};export const dispatch=t=>{for(const o of r){const r=e(o.pattern,o.placeholders,t);if(!1!==r)return{...o.input,vars:r}}return!1};const t=r=>{let t=[];if(r.includes("{")){const e=r.matchAll(/\{([^:}]*)(?::([^}]*))?\}/g);for(const o of e){const e="("+(o[2]||"[^/]+")+")";r=r.replace(o[0],e),t.push(o[1])}r="^"+r+"$"}return{pattern:r,placeholders:t}},e=(r,t,e)=>{let o,n={};const s=t.length;if(s){if(o=e.match(r),null===o)return!1}else if(e!==r)return!1;if(o)for(let r=0;r<s;)n[t[r++]]=o[r];return n};